// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemReimbursement.Context;

namespace SistemReimbursement.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20210630150413_UpdateRelation")]
    partial class UpdateRelation
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SistemReimbursement.Models.Account", b =>
                {
                    b.Property<int>("Nik")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Nik");

                    b.ToTable("TB_M_Account");
                });

            modelBuilder.Entity("SistemReimbursement.Models.AccountRole", b =>
                {
                    b.Property<int>("AccountRoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Nik")
                        .HasColumnType("int");

                    b.Property<int>("RoleId")
                        .HasColumnType("int");

                    b.HasKey("AccountRoleId");

                    b.HasIndex("Nik");

                    b.HasIndex("RoleId");

                    b.ToTable("TB_TR_AccountRole");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Attachment", b =>
                {
                    b.Property<int>("AttachmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("FileAttachment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PaidAmount")
                        .HasColumnType("int");

                    b.Property<int>("ReimbursementId")
                        .HasColumnType("int");

                    b.Property<int>("RequestAmount")
                        .HasColumnType("int");

                    b.HasKey("AttachmentId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ReimbursementId");

                    b.ToTable("TB_TR_Attachment");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("TB_M_Category");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Reimbursement", b =>
                {
                    b.Property<int>("ReimbursementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("FinanceApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("FinanceApprovalNik")
                        .HasColumnType("int");

                    b.Property<int>("FinanceApprovalStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("ManagerApprovalDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ManagerApprovalStatus")
                        .HasColumnType("int");

                    b.Property<int>("Nik")
                        .HasColumnType("int");

                    b.Property<string>("Notes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RequestDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReimbursementId");

                    b.HasIndex("Nik");

                    b.ToTable("TB_M_Reimbursement");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RoleName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("TB_M_Role");
                });

            modelBuilder.Entity("SistemReimbursement.Models.User", b =>
                {
                    b.Property<int>("Nik")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("JobPosition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ManagerNik")
                        .HasColumnType("int");

                    b.HasKey("Nik");

                    b.ToTable("TB_M_User");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Account", b =>
                {
                    b.HasOne("SistemReimbursement.Models.User", "User")
                        .WithOne("Account")
                        .HasForeignKey("SistemReimbursement.Models.Account", "Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("SistemReimbursement.Models.AccountRole", b =>
                {
                    b.HasOne("SistemReimbursement.Models.Account", "Account")
                        .WithMany("AccountRole")
                        .HasForeignKey("Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemReimbursement.Models.Role", "Roles")
                        .WithMany("AccountRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("Roles");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Attachment", b =>
                {
                    b.HasOne("SistemReimbursement.Models.Category", "Category")
                        .WithMany("Attachment")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemReimbursement.Models.Reimbursement", "Reimbursement")
                        .WithMany("Attachment")
                        .HasForeignKey("ReimbursementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Reimbursement", b =>
                {
                    b.HasOne("SistemReimbursement.Models.Account", "Account")
                        .WithMany("Reimbursement")
                        .HasForeignKey("Nik")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Account", b =>
                {
                    b.Navigation("AccountRole");

                    b.Navigation("Reimbursement");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Category", b =>
                {
                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Reimbursement", b =>
                {
                    b.Navigation("Attachment");
                });

            modelBuilder.Entity("SistemReimbursement.Models.Role", b =>
                {
                    b.Navigation("AccountRoles");
                });

            modelBuilder.Entity("SistemReimbursement.Models.User", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
